package com.company;
import org.openqa.selenium.*;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Point;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeDriverService;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.Random;
import java.util.concurrent.TimeUnit;
public class Main extends JFrame implements ActionListener {
    public static ChromeOptions options1 = new ChromeOptions();
    public static ChromeOptions options2 = new ChromeOptions();
    public static ChromeOptions options3 = new ChromeOptions();
    public static ChromeOptions options4 = new ChromeOptions();
    public static ChromeOptions options5 = new ChromeOptions();

    public static WebDriver driver1 = new ChromeDriver(options1);
    public static WebDriver driver2 = new ChromeDriver(options2);
    public static WebDriver driver3 = new ChromeDriver(options3);
    public static WebDriver driver4 = new ChromeDriver(options4);
    public static WebDriver driver5 = new ChromeDriver(options5);


    private static void sleepFor(int miliseconds) throws InterruptedException {
        TimeUnit.MILLISECONDS.sleep(miliseconds);
    }
    private static void myGui(){
        JPanel panel = new JPanel();
        JFrame frame = new JFrame();
        frame.setVisible(true);
        frame.setDefaultCloseOperation(EXIT_ON_CLOSE);
        frame.add(panel);
        //LINK
        JButton button = new JButton("GO!");
        button.setSize(50, 30);
        button.addActionListener(new Main());
        panel.add(button);

        frame.setSize(274, 90);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
    }
    public static void work(ChromeOptions option, WebDriver webdriver){
        
    }
    public static void main(String[] args){
        myGui();
    }
    @Override
    public void actionPerformed(ActionEvent e) {
        try {

            System.setProperty("webdriver.chrome.driver", "C:\\Program Files (x86)\\chromedriver.exe");
            //------------------------
            //PROXY AND DRIVERS
            //------------------------

            options1.addExtensions(new File("C:\\Users\\Vimbing\\Desktop\\proxies\\zips\\p1.zip"));
            options2.addExtensions(new File("C:\\Users\\Vimbing\\Desktop\\proxies\\zips\\p2.zip"));
            options3.addExtensions(new File("C:\\Users\\Vimbing\\Desktop\\proxies\\zips\\p3.zip"));
            options4.addExtensions(new File("C:\\Users\\Vimbing\\Desktop\\proxies\\zips\\p4.zip"));
            options5.addExtensions(new File("C:\\Users\\Vimbing\\Desktop\\proxies\\zips\\p5.zip"));

            driver1.manage().window().setSize(new Dimension(500, 500));
            driver1.manage().window().setPosition(new Point(0, 0));


            driver2.manage().window().setSize(new Dimension(500, 500));
            driver2.manage().window().setPosition(new Point(500, 0));

            driver3.manage().window().setSize(new Dimension(500, 500));
            driver3.manage().window().setPosition(new Point(1000, 0));

            driver4.manage().window().setSize(new Dimension(500, 500));
            driver4.manage().window().setPosition(new Point(1500, 0));

            driver5.manage().window().setSize(new Dimension(500, 500));
            driver5.manage().window().setPosition(new Point(0, 500));


            //Code here

            driver1.get("https://www.nike.com/launch");
            driver2.get("https://www.nike.com/launch");
            driver3.get("https://www.nike.com/launch");
            driver4.get("https://www.nike.com/launch");
            driver5.get("https://www.nike.com/launch");
            sleepFor(100);


        }
        catch(InterruptedException interruptedException){
            interruptedException.printStackTrace();
        }
    }
}
