package com.company;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Point;
import org.openqa.selenium.Proxy;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import java.io.IOException;
import java.util.Scanner;

public class Main {
    private static int guiChoice;
    private static int ifHeadless;
    private static int accCountEverywhere = 0;
    private static void gui(){
        System.out.println("Hi, what do you want to bot today?");
        System.out.println("1. SNKRS");
        System.out.println("2. SNKRS - headless");
        System.out.println("3. Zalando");
        System.out.println("4. Supreme");
        Scanner scanner = new Scanner(System.in);
        guiChoice = scanner.nextInt();
    }
    private static String[] myProxy(){
        String[] proxies = {"2.56.101.59:8591", "2.56.101.87:8619", "2.56.101.207:8739", "2.56.101.185:8717", "2.56.101.33:8565", "2.56.101.156:8688", "2.56.101.95:8627"};
        return proxies;
    }
    private static ChromeDriver[] driversTriggering(int accCount){
        System.setProperty("webdriver.chrome.driver", "C:\\Program Files (x86)\\chromedriver.exe");
        System.out.println("accCount = " + (accCount+1));
        ChromeDriver[] driver = new ChromeDriver[(accCount+1)];
        ChromeOptions[] options = new ChromeOptions[(accCount+1)];
        ChromeDriver[] returnedDrivers = new ChromeDriver[(accCount+1)];
        DesiredCapabilities[] cap = new DesiredCapabilities[(accCount+1)];
        String[] prxy = myProxy();
        Proxy p = new Proxy();

        int[] x = new int[(accCount+1)];
        for(int i=0; i<(accCount+1); i++){
            x[i] = i*500;
        }

        for(int i=0; i<(accCount+1); i++){
            options[i] = new ChromeOptions();
            if(ifHeadless == 1){
                options[i].addArguments("--headless");
            }
            cap[i] = new DesiredCapabilities();
            p.setSslProxy(prxy[i]);
            p.setHttpProxy(prxy[i]);
            p.setFtpProxy(prxy[i]);
            cap[i].setCapability(CapabilityType.PROXY, p);
            options[i].merge(cap[i]);
            driver[i] = new ChromeDriver(options[i]);
            if(ifHeadless == 0){
                driver[i].manage().window().setSize(new Dimension(500, 500));
                driver[i].manage().window().setPosition(new Point(0, 0));
                driver[i].manage().deleteAllCookies();
            }
            returnedDrivers[i] = driver[i];
        }
        return returnedDrivers;
    }

    private static String[] passwordsAndMails(){
        accCountEverywhere = 0;
        String var;
        Scanner scanner = new Scanner(System.in);
        String[] returnedVars = new String[50];
        var = scanner.nextLine();
        char[] passChar = var.toCharArray();
        for(int i=0; i<50; i++){
            returnedVars[i] = "";
        }
        for (char c : passChar) {
            if (c != '-'){
                returnedVars[accCountEverywhere] += c;
            }
            else {
                accCountEverywhere++;
            }
        }
        return returnedVars;
    }


    private static void nikeSnkrs() throws IOException, InterruptedException {
        System.out.println("Input Mails");
        String[] mails = passwordsAndMails();
        System.out.println("Input Passwords");
        String[] passwords = passwordsAndMails();
        ChromeDriver[] driver = driversTriggering(accCountEverywhere);
        for(int i=0; i<(accCountEverywhere+1); i++){
            driver[i].get("https://www.nike.com/pl/launch");
            if(driver[i].findElements(By.xpath("//*[@id=\"cookie-settings-layout\"]/div/div/div/div[3]/div[2]/button")).size()!=0){
                driver[i].findElement(By.xpath("//*[@id=\"cookie-settings-layout\"]/div/div/div/div[3]/div[2]/button")).click();
            }
            driver[i].findElement(By.xpath("//*[@id=\"root\"]/div/div/div[1]/div/header/div[2]/section/div[2]/button")).click();
            Thread.sleep(1000);
            driver[i].findElement(By.xpath("//*[@id=\"root\"]/div/div/div[1]/nav/ul/li[1]/button")).click();
            Thread.sleep(1000);
            driver[i].findElement(By.xpath("//input[@name='emailAddress']")).sendKeys(mails[i]);
            Thread.sleep(500);
            driver[i].findElement(By.xpath("//input[@name='password']")).sendKeys(mails[i]);
            Thread.sleep(300);
            driver[i].findElement(By.xpath("//input[@name='password']")).sendKeys("\n");
        }
    }
    public static void main(String[] args) throws IOException, InterruptedException {
        gui();
        switch(guiChoice){
            case 1:
                System.out.println("Chosen SNKRS");
                ifHeadless = 0;
                nikeSnkrs();
                break;
            case 2:
                System.out.println("Chosen SNKRS - headless");
                ifHeadless = 1;
                nikeSnkrs();
                break;
            case 3:
                System.out.println("Chosen Zalando");
                driversTriggering(accCountEverywhere);
                break;
            case 4:
                System.out.println("Chosen Supreme");
                driversTriggering(accCountEverywhere);
                break;
            default:
                System.out.println("Wrong number");
                nikeSnkrs();
                break;
        }
    }

}
